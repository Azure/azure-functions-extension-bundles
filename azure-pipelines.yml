trigger:
- dev
- v1.x
- v2.x
- v3.x
- v3.x-preview

jobs:
- job: BuildArtifacts_Windows
  pool:
    name: '1ES-Hosted-Azfunc'
    demands:
    - ImageOverride -equals MMS2019TLS

  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '3.1.x'
      performMultiLevelLookup: true
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '2.1.x'
      performMultiLevelLookup: true
  - task: DotNetCoreCLI@2
    inputs:
      command: 'run'
      workingDirectory: '.\build'
      arguments: 'skip:PackageNetCoreV3BundlesLinux,CreateCDNStoragePackageLinux,BuildBundleBinariesForLinux,RunManifestUtilityLinux'
    env:
      SBOMUtilSASUrl: $(SBOMUtilSASUrl)
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.Repository.LocalPath)\artifacts'
      Contents: '*.zip'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      CleanTargetFolder: true
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'

- job: BuildArtifacts_Ubuntu
  pool:
    name: '1ES-Hosted-Azfunc'
    demands:
    - ImageOverride -equals MMSUbuntu20.04TLS

  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '3.1.201'
      performMultiLevelLookup: true
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        mkdir .dotnet &&
        chmod +x dotnet-install.sh &&
        ./dotnet-install.sh --version 3.1.201 --install-dir .dotnet &&
        PATH=".dotnet:"$PATH && dotnet --info
        cd build
        dotnet run skip:PackageNetCoreV2Bundle,PackageNetCoreV3BundlesWindows,CreateRUPackage,CreateCDNStoragePackage,CreateCDNStoragePackageWindows,BuildBundleBinariesForWindows,RunManifestUtilityWindows
    env:
      SBOMUtilSASUrl: $(SBOMUtilSASUrl)
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.Repository.LocalPath)/artifacts'
      Contents: '*.zip'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      CleanTargetFolder: true
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop2'
      publishLocation: 'Container'